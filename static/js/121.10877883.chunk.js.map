{"version":3,"file":"static/js/121.10877883.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsListItem/ContactsListItem.module.css?e52b","components/ContactsListItem/ContactsListItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/pages/Contacts/Contacts.module.css","components/pages/Contacts/Contacts.jsx","redux/selectors/selectors.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContactForm\":\"ContactForm_ContactForm__QuT-m\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { postContact } from 'components/API/api';\nimport { toast } from 'react-hot-toast';\nimport { getContacts } from 'redux/selectors/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(getContacts);\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.currentTarget;\n\t\tname === 'name' ? setName(value) : setNumber(value)\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (\n\t\t\tcontacts.find(\n\t\t\t\tcontact => contact.name.toLowerCase() === name.toLowerCase()\n\t\t\t)\n\t\t) {\n\t\t\ttoast.error(`${name} is already in contacts!`);\n\t\t} else {\n\t\t\tdispatch(postContact({ name, number, }))\n\t\t}\n\n\t\tsetName('');\n\t\tsetNumber('');\n\t\te.currentTarget.reset();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<form className={css.ContactForm} onSubmit={handleSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\tName\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tNumber\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\ttitle=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<button type=\"submit\" className={css.submitBtn}>\n\t\t\t\t\tAdd contact\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactsListItem\":\"ContactsListItem_ContactsListItem__0keFU\"};","import css from '../ContactsListItem/ContactsListItem.module.css'\nimport PropTypes from 'prop-types';\n\nexport const ContactsListItem = ({ name, number, children }) =>\n(<li className={css.ContactsListItem} >\n\t<p>\n\t\t{name} : {number}\n\t</p>\n\t{children}\n</li>)\n\n\nContactsListItem.protoTypes = {\n\tname: PropTypes.string.isRequired,\n\tnumber: PropTypes.number.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__a5jYl\"};","import { ContactsListItem } from 'components/ContactsListItem/ContactsListItem';\nimport { deleteContactById } from 'components/API/api';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from '../ContactsList/ContactList.module.css';\n\nexport const ContactsList = ({ contacts }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<ul className={css.contactsList}>\n\t\t\t{contacts.map(({ name, number, id }) => (\n\t\t\t\t<ContactsListItem key={id} name={name} number={number}>\n\t\t\t\t\t<button type=\"button\" onClick={() => dispatch(deleteContactById(id))}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</ContactsListItem>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\n\nContactsList.protoTypes = {\n\tcontacts: PropTypes.array.isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Filter\":\"Filter_Filter__Gzk39\"};","import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from '../Filter/Filter.module.css';\n\nexport const Filter = ({ changeFilter }) => {\n\tconst filterValue = useSelector(state => state.filter);\n\n\treturn (\n\t\t<label className={css.Filter}>\n\t\t\tFind contacts by name\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"filter\"\n\t\t\t\tvalue={filterValue}\n\t\t\t\tonChange={changeFilter}\n\t\t\t\t// pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t</label>\n\t);\n};\n\n\nFilter.protoTypes = {\n\tonChange: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilterText } from 'redux/slices/FilterSlice';\nimport { getContacts, getError, getIsLoading } from 'redux/selectors/selectors';\nimport { getFilterValue } from 'redux/slices/FilterSlice';\nimport { fetchContacts } from 'components/API/api';\nimport { getIsLoginned } from 'redux/selectors/selectors';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n\tconst contacts = useSelector(getContacts);\n\tconst filterValue = useSelector(getFilterValue);\n\tconst isLoading = useSelector(getIsLoading);\n\tconst error = useSelector(getError);\n\tconst dispatch = useDispatch();\n\tconst isLoginned = useSelector(getIsLoginned)\n\n\tuseEffect(() => {\n\t\tisLoginned && dispatch(fetchContacts())\n\t}, [dispatch, isLoginned])\n\n\tconst changeFilter = e => {\n\t\tconst { value } = e.currentTarget;\n\n\t\tdispatch(addFilterText(value));\n\t};\n\n\tconst getFilteredContacts = () => {\n\t\tconst normalizedFilter = filterValue.toLowerCase();\n\n\t\treturn contacts.filter(contact =>\n\t\t\tcontact.name.toLowerCase().includes(normalizedFilter)\n\t\t);\n\t};\n\n\tconst filteredContacts = getFilteredContacts();\n\n\treturn (\n\t\t<div className={css.phonebook}>\n\t\t\t<h1>Phonebook</h1>\n\t\t\t<ContactForm />\n\t\t\t<h2>Contacts</h2>\n\t\t\t<Filter changeFilter={changeFilter} />\n\t\t\t{contacts.length > 0 && <ContactsList contacts={filteredContacts} />}\n\t\t\t{error && <h3>{error}</h3>}\n\t\t\t{isLoading && <h3>Loading...</h3>}\n\t\t</div>\n\t);\n};\n\n\n\nexport default Contacts;","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getIsAuth = state => state.auth.access_token;\nexport const getIsLoginned = state => state.auth.isLoginned;\nexport const getIsSignedUp = state => state.auth.isSignedUp;\n\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","e","currentTarget","value","className","css","onSubmit","preventDefault","find","contact","toLowerCase","toast","postContact","reset","type","onChange","title","required","ContactsListItem","children","protoTypes","PropTypes","ContactsList","map","id","onClick","deleteContactById","Filter","changeFilter","filterValue","state","filter","getFilterValue","isLoading","getIsLoading","error","getError","isLoginned","getIsLoginned","useEffect","fetchContacts","filteredContacts","normalizedFilter","includes","getFilteredContacts","addFilterText","length","items","auth","getIsSignedUp","isSignedUp","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}